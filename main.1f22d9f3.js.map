{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageWin","messageLose","fieldRows","querySelectorAll","gameScore","bestScore","score","size","gameField","reset","className","render","row","col","children","textContent","innerText","startGame","randomX","Math","floor","random","randomY","slide","array","filterEmpty","a","filter","x","length","i","push","slideLeft","changed","old","Array","from","join","swap","x1","y1","x2","y2","tmp","mirror","y","xLeft","xRight","transpose","moveLeft","moveRight","moveUp","moveDown","hasEmptyCell","isFinish","field","map","find","classList","remove","addEventListener","e","replace","hidden","code","ok","keyCode"],"mappings":"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","file":"main.1f22d9f3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst fieldRows = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst bestScore = document.querySelector('.best-game__score');\n\nlet score = 0;\nconst size = 4;\n\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction reset() {\n  score = 0;\n\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  messageLose.className = 'message message-lose hidden';\n  messageWin.className = 'message message-win hidden';\n\n  render();\n};\n\nfunction render() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      fieldRows[row].children[col].textContent\n        = gameField[row][col] ? gameField[row][col] : '';\n\n      fieldRows[row].children[col].className\n        = `field-cell field-cell--${gameField[row][col]}`;\n    };\n  };\n\n  gameScore.innerText = score;\n};\n\nfunction startGame() {\n  const randomX = Math.floor(Math.random() * 4);\n  const randomY = Math.floor(Math.random() * 4);\n\n  if (gameField[randomX][randomY] === 0) {\n    gameField[randomX][randomY] = Math.random() > 0.9 ? 4 : 2;\n  } else {\n    startGame();\n  };\n};\n\nbutton.addEventListener('click', (e) => {\n  if (button.innerText === 'Start') {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.hidden = true;\n  } else {\n    reset();\n  }\n\n  startGame();\n  startGame();\n\n  render();\n});\n\nfunction slide(array) {\n  function filterEmpty(a) {\n    return a.filter(x => x !== 0);\n  };\n  /* eslint-disable */\n  array = filterEmpty(array);\n\n  if (array.length > 0) {\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] === array[i + 1]) {\n        score += array[i] + array[i + 1];\n        array[i] *= 2;\n        array[i + 1] = 0;\n      };\n    };\n  };\n\n  array = filterEmpty(array);\n\n  while (array.length < size) {\n    array.push(0);\n  };\n\n  return array;\n}\n\nfunction slideLeft() {\n  let changed = false;\n\n  for (let i = 0; i < 4; i++) {\n    const old = Array.from(gameField[i]);\n\n    gameField[i] = slide(gameField[i]);\n    changed = changed || (gameField[i].join(',') !== old.join(','));\n  };\n\n  return changed;\n};\n\nfunction swap(x1, y1, x2, y2) {\n  const tmp = gameField[y1][x1];\n\n  gameField[y1][x1] = gameField[y2][x2];\n  gameField[y2][x2] = tmp;\n};\n\nfunction mirror() {\n  for (let y = 0; y < size; y++) {\n    for (let xLeft = 0, xRight = size - 1; xLeft < xRight; xLeft++, xRight--) {\n      swap(xLeft, y, xRight, y);\n    };\n  };\n};\n\nfunction transpose() {\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < y; x++) {\n      swap(x, y, y, x);\n    };\n  };\n};\n\nfunction moveLeft() {\n  return slideLeft();\n};\n\nfunction moveRight() {\n  mirror();\n\n  const changed = moveLeft();\n\n  mirror();\n\n  return changed;\n};\n\nfunction moveUp() {\n  transpose();\n\n  const changed = moveLeft();\n\n  transpose();\n\n  return changed;\n};\n\nfunction moveDown() {\n  transpose();\n\n  const changed = moveRight();\n\n  transpose();\n\n  return changed;\n};\n\nfunction hasEmptyCell() {\n  for (let x = 0; x < size; x++) {\n    for (let y = 0; y < size; y++) {\n      if (gameField[x][y] === 0) {\n        return true;\n      };\n    };\n  };\n\n  return false;\n};\n\nfunction isFinish(field) {\n  const copyField = field.map(x => [...x]);\n  const winner = copyField.find(x => x.find(y => y >= 2048));\n\n  if(winner) {\n    messageWin.className = 'message message-win';\n  };\n\n  if (score > bestScore.innerText) {\n    bestScore.innerText = score;\n  };\n\n\n  if (hasEmptyCell()) {\n    return;\n  };\n\n  for (let x = 0; x < size; x++) {\n    for (let y = 0; y < size - 1; y++) {\n      if (gameField[x][y] === gameField[x][y + 1]\n        || gameField[y][x] === gameField[y + 1][x]) {\n        return;\n      };\n    };\n  };\n\n  if (score > bestScore.innerText) {\n    bestScore.innerText = score;\n  };\n\n  messageLose.classList.remove('hidden');\n};\n\ndocument.addEventListener('keydown', function(e) {\n  const code = e.keyCode;\n  let ok;\n\n  switch (code) {\n    case 40: ok = moveDown(); break;\n    case 38: ok = moveUp(); break;\n    case 37: ok = moveLeft(); break;\n    case 39: ok = moveRight(); break;\n    default: return;\n  };\n\n  if (ok) {\n    startGame();\n    render();\n    isFinish(gameField);\n  };\n});\n"]}